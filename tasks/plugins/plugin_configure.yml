---
- name: create plugin directory
  file:
    path: "{{ deploy_helper.shared_path }}/{{ plugin_config_item.dest | dirname }}"
    state: directory
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_group }}"
    mode: 0755

- name: check the config file allways exists
  stat:
    path: "{{ deploy_helper.shared_path }}/{{ plugin_config_item.dest }}"
  register: config_file

- name: put config template to plugin dir
  template:
    src: "{{ plugin_config_item.src }}"
    dest: "{{ deploy_helper.shared_path }}/{{ plugin_config_item.dest }}"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_group }}"
    mode: 0600
  when:
    ( plugin_config_item.src is defined ) and
    (
      ( not config_file.stat.exists ) or
      ( plugin_config_item.force is defined and
        plugin_config_item.force )
      )

- name: debug put all config template from folder to plugin dir
  debug:
    msg: "{{ deploy_helper.shared_path }}/{{ plugin_config_item.dest }}/{{ item | basename | regex_replace('\\.j2','') }}"
  with_fileglob:
    - "{{ plugin_config_item.src_dir }}/*.j2"
  when:
    ( plugin_config_item.src_dir is defined ) and (
    ( not config_file.stat.exists ) or
    ( plugin_config_item.force is defined and
      plugin_config_item.force ))

- name: put all config template from folder to plugin dir
  template:
    src: "{{ item }}"
    dest: "{{ deploy_helper.shared_path }}/{{ plugin_config_item.dest }}/{{ item | basename | regex_replace('\\.j2','') }}"
    owner: "{{ minecraft_user }}"
    group: "{{ minecraft_group }}"
    mode: 0600
  with_fileglob:
    - "{{ plugin_config_item.src_dir }}/*.j2"
  when:
    ( plugin_config_item.src_dir is defined ) and (
    ( not config_file.stat.exists ) or
    ( plugin_config_item.force is defined and
      plugin_config_item.force ))
